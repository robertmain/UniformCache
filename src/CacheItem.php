<?php

namespace UniformCache;

use Psr\Cache\CacheItemInterface;

/**
 * An implementation of a PSR-6 CacheItemInterface
 *
* Encapsulates the storage and retrieval of cache items. Each instance is generated by an implementation of
* {@link Adapter}, which is responsible for any required setup as well as associating the object with a unique Key.
*
* Calling Libraries MUST NOT instantiate Item objects themselves. They may only be requested from an implementation of
* {@link Adapter} object via the {@link \Psr\Cache\CacheItemPoolInterface getItem()} method.
 */
class CacheItem implements CacheItemInterface
{
    /**
    * @var string Unique key representing a single object in the cache
    */
    protected $key;

    /**
    * @var mixed The value being stored in the cache
    */
    protected $value;

    /**
    * @var boolean Represents whether or not the item was found in the cache(a hit)
    */
    protected $isHit;

    /**
     * {@inheritdoc}
    */
    public function getKey()
    {
        return $this->key;
    }

    /**
     * {@inheritdoc}
    */
    public function get()
    {
        return $this->value;
    }

    /**
     * {@inheritdoc}
    */
    public function isHit()
    {
        return $this->isHit;
    }

    /**
     * {@inheritdoc}
    */
    public function set($value)
    {
        $this->value = $value;
    }

    /**
     * {@inheritdoc}
    */
    public function expiresAt($expiration)
    {
    }

    /**
     * {@inheritdoc}
    */
    public function expiresAfter($time)
    {
    }
}
